spring.application.name=OpenAI-ChatApp

logging.pattern.console=%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n

spring.ai.chat.client.enabled=false

# Open-AI
spring.ai.openai.api-key=${OPEN_AI_KEY}


# AWS Converse Bedrock
spring.ai.bedrock.aws.region=us-east-1
spring.ai.bedrock.aws.access-key=${AWS_ACCESS_KEY_ID}
spring.ai.bedrock.aws.secret-key=${AWS_SECRET_ACCESS_KEY}
spring.ai.model.chat=bedrock-converse
spring.ai.bedrock.converse.chat.options.model=${AWS_AI_MODEL}

logging.level.org.springframework.ai.chat.client.advisor=debug
logging.level.com.ai.robot=debug

#Database Configurations
## H2
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:chatdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Setting up memory configs in JDBC
spring.ai.chat.memory.repository.jdbc.initialize-schema=always
spring.ai.chat.memory.repository.jdbc.schema=classpath:/schema-h2db.sql

#Docker Compose Settings
spring.docker.compose.stop.command=down

#Qdrant DB
spring.ai.vectorstore.qdrant.initialize-schema=true
spring.ai.vectorstore.qdrant.host=localhost
spring.ai.vectorstore.qdrant.port=6334
spring.ai.vectorstore.qdrant.collection-name=aichat